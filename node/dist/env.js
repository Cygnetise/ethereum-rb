// Generated by CoffeeScript 1.10.0
(function() {
  var Web3, c, contracts, contractsLib, deasync, eth, getCoinbase, geth_host, geth_ipc, parity_ipc, provider, web3;

  c = console;

  Web3 = require('web3');

  contractsLib = require('./contracts_lib');

  deasync = require('deasync');

  getCoinbase = function() {
    var res;
    res = null;
    eth.getCoinbase(function(err, coinbase) {
      return res = coinbase;
    });
    while (res === null) {
      deasync.runLoopOnce();
    }
    return res;
  };

  c.log("RPC: " + process.env.RPC);

  if (process.env.RPC === "1") {
    c.log("Using RPC instead of IPC");
    geth_host = "http://127.0.0.1:8545";
    provider = new Web3.providers.HttpProvider(geth_host);
  } else {
    parity_ipc = process.env.HOME + "/.parity/jsonrpc.ipc";
    geth_ipc = parity_ipc;
    provider = new Web3.providers.IpcProvider(geth_ipc, require('net'));
  }

  web3 = new Web3(provider);

  eth = web3.eth;

  contracts = contractsLib(web3).readContracts();

  module.exports = {
    web3: web3,
    eth: eth,
    contracts: contracts,
    getCoinbase: getCoinbase
  };

}).call(this);
